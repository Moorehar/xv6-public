I went into the syscall.h file where the number of system calls is held and added a new 22nd system call named getsyscallinfo. This was to reserve the system call number for my own system call later. Next I went into the syscall.c file and added a sys_getsyscallinfo to the array of function pointers so that it could be invoked should the call number 22 be made. I then added the prototype of the function, extern int sys_getsyscallinfo(void), where I later implemented it in the sysproc.c file. After the implementation of the counter was completed, I went into the usys.S file where I added a SYSCALL(getsyscallinfo). This would allow it to define the global name getsyscallinfo and move the SYS_getsyscallinfo number to the correct register for later interpretation. I then went into the user.h file and added the int getsyscallinfo(void) to the end of the system calls.  I then created a test file named testfile.c where I run a print statement which returns the information from the getsyscallinfo() function. 
